(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/common/http'), require('@angular/core'), require('@bloomreach/spa-sdk'), require('@angular/platform-browser'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@bloomreach/ng-sdk', ['exports', '@angular/common', '@angular/common/http', '@angular/core', '@bloomreach/spa-sdk', '@angular/platform-browser', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.bloomreach = global.bloomreach || {}, global.bloomreach['ng-sdk'] = {}), global.ng.common, global.ng.common.http, global.ng.core, global.BloomreachSpaSdk, global.ng.platformBrowser, global.rxjs, global.rxjs.operators));
}(this, (function (exports, common, http, core, spaSdk, platformBrowser, rxjs, operators) { 'use strict';

    /*
     * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var BrContainerItemUndefinedComponent = /** @class */ (function () {
        function BrContainerItemUndefinedComponent() {
        }
        return BrContainerItemUndefinedComponent;
    }());
    BrContainerItemUndefinedComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'br-container-item-undefined',
                    template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\nComponent \"{{ component.getType() }}\" is not defined.\n"
                },] }
    ];
    BrContainerItemUndefinedComponent.propDecorators = {
        component: [{ type: core.Input }]
    };

    /*
     * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var BrContainerBoxComponent = /** @class */ (function () {
        function BrContainerBoxComponent() {
        }
        Object.defineProperty(BrContainerBoxComponent.prototype, "isPreview", {
            get: function () {
                var _a;
                return (_a = this.page) === null || _a === void 0 ? void 0 : _a.isPreview();
            },
            enumerable: false,
            configurable: true
        });
        return BrContainerBoxComponent;
    }());
    BrContainerBoxComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'div.br-container-box',
                    template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<div *ngFor=\"let child of component.getChildren()\" [ngClass]=\"{'hst-container-item': page.isPreview()}\">\n  <ng-container [brComponent]=\"child\"></ng-container>\n</div>\n",
                    changeDetection: core.ChangeDetectionStrategy.OnPush
                },] }
    ];
    BrContainerBoxComponent.propDecorators = {
        component: [{ type: core.Input }],
        page: [{ type: core.Input }],
        isPreview: [{ type: core.HostBinding, args: ['class.hst-container',] }]
    };

    /*
     * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var BrContainerInlineComponent = /** @class */ (function () {
        function BrContainerInlineComponent() {
        }
        Object.defineProperty(BrContainerInlineComponent.prototype, "isPreview", {
            get: function () {
                var _a;
                return (_a = this.page) === null || _a === void 0 ? void 0 : _a.isPreview();
            },
            enumerable: false,
            configurable: true
        });
        return BrContainerInlineComponent;
    }());
    BrContainerInlineComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'div.br-container-inline',
                    template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<span *ngFor=\"let child of component.getChildren()\" [ngClass]=\"{'hst-container-item': page.isPreview()}\">\n  <ng-container [brComponent]=\"child\"></ng-container>\n</span>\n",
                    changeDetection: core.ChangeDetectionStrategy.OnPush
                },] }
    ];
    BrContainerInlineComponent.propDecorators = {
        component: [{ type: core.Input }],
        page: [{ type: core.Input }],
        isPreview: [{ type: core.HostBinding, args: ['class.hst-container',] }]
    };

    /*
     * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var BrContainerOrderedListComponent = /** @class */ (function () {
        function BrContainerOrderedListComponent() {
        }
        Object.defineProperty(BrContainerOrderedListComponent.prototype, "isPreview", {
            get: function () {
                var _a;
                return (_a = this.page) === null || _a === void 0 ? void 0 : _a.isPreview();
            },
            enumerable: false,
            configurable: true
        });
        return BrContainerOrderedListComponent;
    }());
    BrContainerOrderedListComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ol.br-container-ordered-list',
                    template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<li *ngFor=\"let child of component.getChildren()\" [ngClass]=\"{'hst-container-item': page.isPreview()}\">\n  <ng-container [brComponent]=\"child\"></ng-container>\n</li>\n",
                    changeDetection: core.ChangeDetectionStrategy.OnPush
                },] }
    ];
    BrContainerOrderedListComponent.propDecorators = {
        component: [{ type: core.Input }],
        page: [{ type: core.Input }],
        isPreview: [{ type: core.HostBinding, args: ['class.hst-container',] }]
    };

    /*
     * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var BrContainerUnorderedListComponent = /** @class */ (function () {
        function BrContainerUnorderedListComponent() {
        }
        Object.defineProperty(BrContainerUnorderedListComponent.prototype, "isPreview", {
            get: function () {
                var _a;
                return (_a = this.page) === null || _a === void 0 ? void 0 : _a.isPreview();
            },
            enumerable: false,
            configurable: true
        });
        return BrContainerUnorderedListComponent;
    }());
    BrContainerUnorderedListComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ul.br-container-unordered-list',
                    template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<li *ngFor=\"let child of component.getChildren()\" [ngClass]=\"{'hst-container-item': page.isPreview()}\">\n  <ng-container [brComponent]=\"child\"></ng-container>\n</li>\n",
                    changeDetection: core.ChangeDetectionStrategy.OnPush
                },] }
    ];
    BrContainerUnorderedListComponent.propDecorators = {
        component: [{ type: core.Input }],
        page: [{ type: core.Input }],
        isPreview: [{ type: core.HostBinding, args: ['class.hst-container',] }]
    };

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    function __createBinding(o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    }
    function __exportStar(m, exports) {
        for (var p in m)
            if (p !== "default" && !exports.hasOwnProperty(p))
                exports[p] = m[p];
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (Object.hasOwnProperty.call(mod, k))
                    result[k] = mod[k];
        result.default = mod;
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    /*
     * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var BrNodeDirective = /** @class */ (function () {
        function BrNodeDirective() {
        }
        return BrNodeDirective;
    }());
    BrNodeDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[brNode]',
                },] }
    ];
    BrNodeDirective.propDecorators = {
        component: [{ type: core.Input, args: ['brNode',] }],
        template: [{ type: core.Input, args: ['brNodeTemplate',] }]
    };

    /**
     * The brXM page.
     */
    var BrPageComponent = /** @class */ (function () {
        function BrPageComponent(changeDetectorRef, httpClient, zone, platform, transferState) {
            var _this = this;
            this.changeDetectorRef = changeDetectorRef;
            this.httpClient = httpClient;
            this.platform = platform;
            this.transferState = transferState;
            /**
             * The brXM and Angular components mapping.
             */
            this.mapping = {};
            /**
             * The TransferState key is used to transfer the state from the server-side to the client-side.
             * By default, it equals to `brPage`.
             * If `false` is passed then the state transferring feature will be disabled.
             */
            this.stateKey = platformBrowser.makeStateKey('brPage');
            /**
             * The current state of the page component.
             */
            this.state = new rxjs.BehaviorSubject(undefined);
            this.afterContentChecked$ = new rxjs.Subject();
            this.request = this.request.bind(this);
            this.state.pipe(operators.pairwise(), operators.pluck(0), operators.filter(spaSdk.isPage))
                .subscribe(spaSdk.destroy);
            this.state.pipe(operators.filter(spaSdk.isPage), operators.switchMap(function (page) { return _this.afterContentChecked$.pipe(operators.take(1), operators.mapTo(page)); }))
                .subscribe(function (page) { return zone.runOutsideAngular(function () { return page.sync(); }); });
            this.state.pipe(operators.filter(function () { return common.isPlatformServer(_this.platform); }), operators.filter(spaSdk.isPage))
                .subscribe(function (page) { var _a; return _this.stateKey && ((_a = _this.transferState) === null || _a === void 0 ? void 0 : _a.set(_this.stateKey, page.toJSON())); });
        }
        Object.defineProperty(BrPageComponent.prototype, "context", {
            get: function () {
                var page = this.state.getValue();
                var component = page === null || page === void 0 ? void 0 : page.getComponent();
                if (!page || !component) {
                    return;
                }
                return {
                    component: component,
                    page: page,
                    $implicit: component,
                    template: this.template,
                };
            },
            enumerable: false,
            configurable: true
        });
        BrPageComponent.prototype.ngOnChanges = function (changes) {
            var _a, _b, _c, _d, _e, _f;
            if (changes.configuration || changes.page) {
                this.initialize((_a = changes.page) === null || _a === void 0 ? void 0 : _a.currentValue);
            }
            if (((_b = changes.stateKey) === null || _b === void 0 ? void 0 : _b.previousValue) && common.isPlatformServer(this.platform)) {
                if (changes.stateKey.currentValue && ((_c = this.transferState) === null || _c === void 0 ? void 0 : _c.hasKey(changes.stateKey.previousValue))) {
                    (_d = this.transferState) === null || _d === void 0 ? void 0 : _d.set(changes.stateKey.currentValue, (_e = this.transferState) === null || _e === void 0 ? void 0 : _e.get(changes.stateKey.previousValue, undefined));
                }
                (_f = this.transferState) === null || _f === void 0 ? void 0 : _f.remove(changes.stateKey.previousValue);
            }
        };
        BrPageComponent.prototype.ngAfterContentChecked = function () {
            this.afterContentChecked$.next();
        };
        BrPageComponent.prototype.ngOnDestroy = function () {
            this.state.next(undefined);
            this.state.complete();
            this.afterContentChecked$.complete();
        };
        BrPageComponent.prototype.initialize = function (page) {
            var _this = this;
            var _a, _b, _c;
            if (this.stateKey && common.isPlatformBrowser(this.platform) && ((_a = this.transferState) === null || _a === void 0 ? void 0 : _a.hasKey(this.stateKey))) {
                page = page !== null && page !== void 0 ? page : (_b = this.transferState) === null || _b === void 0 ? void 0 : _b.get(this.stateKey, undefined);
                (_c = this.transferState) === null || _c === void 0 ? void 0 : _c.remove(this.stateKey);
            }
            var configuration = Object.assign({ httpClient: this.request }, this.configuration);
            var observable = page
                ? rxjs.of(spaSdk.initialize(configuration, page))
                : rxjs.from(spaSdk.initialize(configuration));
            observable.subscribe(function (state) {
                _this.state.next(state);
                _this.changeDetectorRef.detectChanges();
            });
        };
        BrPageComponent.prototype.request = function () {
            var _g = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                _g[_i] = arguments[_i];
            }
            var _h = __read(_g, 1), _j = _h[0], body = _j.data, headers = _j.headers, method = _j.method, url = _j.url;
            return this.httpClient.request(method, url, {
                body: body,
                headers: headers,
                responseType: 'json'
            })
                .pipe(operators.map(function (data) { return ({ data: data }); }))
                .toPromise();
        };
        return BrPageComponent;
    }());
    BrPageComponent.decorators = [
        { type: core.Component, args: [{
                    changeDetection: core.ChangeDetectionStrategy.OnPush,
                    selector: 'br-page',
                    template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<ng-template #brNode let-component let-template=\"template\">\n  <ng-container [brNode]=\"component\" [brNodeTemplate]=\"template\">\n    <ng-container [ngSwitch]=\"component | brNodeType\">\n      <ng-container *ngSwitchCase=\"'container-item'\" [brNodeContainerItem]=\"component\"></ng-container>\n      <ng-container *ngSwitchCase=\"'container'\" [brNodeContainer]=\"component\"></ng-container>\n      <ng-container *ngSwitchDefault [brNodeComponent]=\"component\"></ng-container>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template *ngIf=\"context\" [ngTemplateOutlet]=\"brNode\" [ngTemplateOutletContext]=\"context\"></ng-template>\n"
                },] }
    ];
    BrPageComponent.ctorParameters = function () { return [
        { type: core.ChangeDetectorRef },
        { type: http.HttpClient },
        { type: core.NgZone },
        { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] },
        { type: platformBrowser.TransferState, decorators: [{ type: core.Optional }] }
    ]; };
    BrPageComponent.propDecorators = {
        configuration: [{ type: core.Input }],
        mapping: [{ type: core.Input }],
        page: [{ type: core.Input }],
        stateKey: [{ type: core.Input }],
        state: [{ type: core.Output }],
        node: [{ type: core.ViewChild, args: ['brNode', { static: true },] }],
        template: [{ type: core.ContentChild, args: [core.TemplateRef, { static: true },] }]
    };

    /**
     * The brXM component.
     */
    var BrComponentDirective = /** @class */ (function () {
        function BrComponentDirective(container, template, node, page) {
            this.container = container;
            this.template = template;
            this.node = node;
            this.page = page;
        }
        BrComponentDirective.prototype.ngOnChanges = function (changes) {
            if (!changes.component || changes.component.isFirstChange()) {
                return;
            }
            this.ngOnDestroy();
            this.ngOnInit();
        };
        BrComponentDirective.prototype.ngOnDestroy = function () {
            this.container.clear();
        };
        BrComponentDirective.prototype.ngOnInit = function () {
            var _this = this;
            var _a, _b;
            var page = (_a = this.page) === null || _a === void 0 ? void 0 : _a.state.getValue();
            if (!page) {
                return;
            }
            // tslint:disable: no-non-null-assertion
            (_b = this.components) === null || _b === void 0 ? void 0 : _b.forEach(function (component) { return _this.container.createEmbeddedView(_this.page.node, {
                component: component,
                page: page,
                $implicit: component,
                template: _this.template,
            }); });
            // tslint:enable: no-non-null-assertion
        };
        Object.defineProperty(BrComponentDirective.prototype, "context", {
            get: function () {
                var _a, _b;
                if (this.node) {
                    return this.node.component;
                }
                return (_b = (_a = this.page) === null || _a === void 0 ? void 0 : _a.state.getValue()) === null || _b === void 0 ? void 0 : _b.getComponent();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BrComponentDirective.prototype, "components", {
            get: function () {
                var _a, _b;
                if (spaSdk.isComponent(this.component)) {
                    return [this.component];
                }
                if (!this.component) {
                    return (_a = this.context) === null || _a === void 0 ? void 0 : _a.getChildren();
                }
                var component = (_b = this.context) === null || _b === void 0 ? void 0 : _b.getComponent.apply(_b, __spread(this.component.split('/')));
                return component && [component];
            },
            enumerable: false,
            configurable: true
        });
        return BrComponentDirective;
    }());
    BrComponentDirective.decorators = [
        { type: core.Directive, args: [{ selector: '[brComponent]' },] }
    ];
    BrComponentDirective.ctorParameters = function () { return [
        { type: core.ViewContainerRef },
        { type: core.TemplateRef, decorators: [{ type: core.Optional }] },
        { type: BrNodeDirective, decorators: [{ type: core.Optional }] },
        { type: BrPageComponent, decorators: [{ type: core.Optional }] }
    ]; };
    BrComponentDirective.propDecorators = {
        component: [{ type: core.Input, args: ['brComponent',] }]
    };

    var BrMetaDirective = /** @class */ (function () {
        function BrMetaDirective(container, template) {
            this.container = container;
            this.template = template;
        }
        BrMetaDirective.prototype.ngOnChanges = function (changes) {
            var _a, _b;
            (_a = this.clear) === null || _a === void 0 ? void 0 : _a.call(this);
            this.container.clear();
            var _c = this.render(), head = _c.head, tail = _c.tail;
            this.clear = head && tail && ((_b = this.meta) === null || _b === void 0 ? void 0 : _b.render(head, tail));
        };
        BrMetaDirective.prototype.ngOnDestroy = function () {
            var _a;
            (_a = this.clear) === null || _a === void 0 ? void 0 : _a.call(this);
            this.container.clear();
        };
        BrMetaDirective.prototype.render = function () {
            if (!this.template) {
                return {
                    head: this.container.element.nativeElement,
                    tail: this.container.element.nativeElement,
                };
            }
            var embeddedViewRef = this.container.createEmbeddedView(this.template);
            var _c = __read(embeddedViewRef.rootNodes, 1), head = _c[0];
            var _d = __read(embeddedViewRef.rootNodes.slice(-1), 1), tail = _d[0];
            return { head: head, tail: tail };
        };
        return BrMetaDirective;
    }());
    BrMetaDirective.decorators = [
        { type: core.Directive }
    ];
    BrMetaDirective.ctorParameters = function () { return [
        { type: core.ViewContainerRef },
        { type: core.TemplateRef, decorators: [{ type: core.Optional }] }
    ]; };

    /**
     * The button direcrtive that opens for editing a content.
     */
    var BrManageContentButtonDirective = /** @class */ (function (_super) {
        __extends(BrManageContentButtonDirective, _super);
        function BrManageContentButtonDirective(container, template, page) {
            var _this = _super.call(this, container, template) || this;
            _this.page = page;
            return _this;
        }
        BrManageContentButtonDirective.prototype.ngOnChanges = function (changes) {
            var _a, _b;
            this.meta = (_b = (_a = this.page) === null || _a === void 0 ? void 0 : _a.state.getValue()) === null || _b === void 0 ? void 0 : _b.getButton(spaSdk.TYPE_MANAGE_CONTENT_BUTTON, this);
            _super.prototype.ngOnChanges.call(this, changes);
        };
        return BrManageContentButtonDirective;
    }(BrMetaDirective));
    BrManageContentButtonDirective.decorators = [
        { type: core.Directive, args: [{ selector: '[brManageContentButton]' },] }
    ];
    BrManageContentButtonDirective.ctorParameters = function () { return [
        { type: core.ViewContainerRef },
        { type: core.TemplateRef, decorators: [{ type: core.Optional }] },
        { type: BrPageComponent, decorators: [{ type: core.Optional }] }
    ]; };
    BrManageContentButtonDirective.propDecorators = {
        content: [{ type: core.Input, args: ['brManageContentButton',] }],
        documentTemplateQuery: [{ type: core.Input }],
        folderTemplateQuery: [{ type: core.Input }],
        path: [{ type: core.Input }],
        parameter: [{ type: core.Input }],
        relative: [{ type: core.Input }],
        root: [{ type: core.Input }]
    };

    /**
     * The button directive that opens a menu editor.
     */
    var BrManageMenuButtonDirective = /** @class */ (function (_super) {
        __extends(BrManageMenuButtonDirective, _super);
        function BrManageMenuButtonDirective(container, template, page) {
            var _this = _super.call(this, container, template) || this;
            _this.page = page;
            return _this;
        }
        BrManageMenuButtonDirective.prototype.ngOnChanges = function (changes) {
            var _a, _b;
            this.meta = (_b = (_a = this.page) === null || _a === void 0 ? void 0 : _a.state.getValue()) === null || _b === void 0 ? void 0 : _b.getButton(spaSdk.TYPE_MANAGE_MENU_BUTTON, this.menu);
            _super.prototype.ngOnChanges.call(this, changes);
        };
        return BrManageMenuButtonDirective;
    }(BrMetaDirective));
    BrManageMenuButtonDirective.decorators = [
        { type: core.Directive, args: [{ selector: '[brManageMenuButton]' },] }
    ];
    BrManageMenuButtonDirective.ctorParameters = function () { return [
        { type: core.ViewContainerRef },
        { type: core.TemplateRef, decorators: [{ type: core.Optional }] },
        { type: BrPageComponent, decorators: [{ type: core.Optional }] }
    ]; };
    BrManageMenuButtonDirective.propDecorators = {
        menu: [{ type: core.Input, args: ['brManageMenuButton',] }]
    };

    /*
     * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var BrNodeTypePipe = /** @class */ (function () {
        function BrNodeTypePipe() {
        }
        BrNodeTypePipe.prototype.transform = function (component) {
            if (spaSdk.isContainerItem(component)) {
                return 'container-item';
            }
            if (spaSdk.isContainer(component)) {
                return 'container';
            }
            return 'component';
        };
        return BrNodeTypePipe;
    }());
    BrNodeTypePipe.decorators = [
        { type: core.Pipe, args: [{ name: 'brNodeType' },] }
    ];

    var BrNodeComponentDirective = /** @class */ (function () {
        function BrNodeComponentDirective(container, injector, componentFactoryResolver, node, page) {
            this.container = container;
            this.injector = injector;
            this.componentFactoryResolver = componentFactoryResolver;
            this.node = node;
            this.page = page;
        }
        BrNodeComponentDirective.prototype.ngOnChanges = function (changes) {
            var _a;
            (_a = this.clear) === null || _a === void 0 ? void 0 : _a.call(this);
            this.container.clear();
            var _c = this.render(), head = _c.head, tail = _c.tail;
            this.clear = head && tail && this.component.getMeta().render(head, tail);
        };
        BrNodeComponentDirective.prototype.getMapping = function () {
            return this.page.mapping[this.component.getName()];
        };
        BrNodeComponentDirective.prototype.render = function () {
            if (this.node.template) {
                return this.renderTemplate();
            }
            var component = this.getMapping();
            if (!component) {
                return this.renderChildren();
            }
            return this.renderMapping(component);
        };
        BrNodeComponentDirective.prototype.renderTemplate = function () {
            // tslint:disable: no-non-null-assertion
            var embeddedViewRef = this.container.createEmbeddedView(this.node.template, {
                $implicit: this.component,
                component: this.component,
                page: this.page.state.getValue(),
            });
            // tslint:enable: no-non-null-assertion
            var _c = __read(embeddedViewRef.rootNodes, 1), head = _c[0];
            var _d = __read(embeddedViewRef.rootNodes.slice(-1), 1), tail = _d[0];
            return { head: head, tail: tail };
        };
        BrNodeComponentDirective.prototype.renderChildren = function () {
            var _this = this;
            var _a, _b;
            var nodes = this.component.getChildren()
                .map(function (component) { return _this.container.createEmbeddedView(_this.page.node, {
                component: component,
                $implicit: component,
                page: _this.page.state.getValue(),
            }); })
                .flatMap(function (view) { return view.rootNodes; });
            var head = (_a = nodes[0]) !== null && _a !== void 0 ? _a : this.container.element.nativeElement;
            var tail = (_b = nodes[nodes.length - 1]) !== null && _b !== void 0 ? _b : head;
            return { head: head, tail: tail };
        };
        BrNodeComponentDirective.prototype.renderMapping = function (component) {
            var componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);
            var componentRef = this.container.createComponent(componentFactory, undefined, this.injector);
            componentRef.instance.component = this.component;
            componentRef.instance.page = this.page.state.getValue();
            return {
                head: componentRef.location.nativeElement,
                tail: componentRef.location.nativeElement,
            };
        };
        BrNodeComponentDirective.prototype.ngOnDestroy = function () {
            var _a;
            (_a = this.clear) === null || _a === void 0 ? void 0 : _a.call(this);
            this.container.clear();
        };
        return BrNodeComponentDirective;
    }());
    BrNodeComponentDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[brNodeComponent]',
                    inputs: ['component:brNodeComponent'],
                },] }
    ];
    BrNodeComponentDirective.ctorParameters = function () { return [
        { type: core.ViewContainerRef },
        { type: core.Injector },
        { type: core.ComponentFactoryResolver },
        { type: BrNodeDirective },
        { type: BrPageComponent }
    ]; };

    var BrNodeContainerDirective = /** @class */ (function (_super) {
        __extends(BrNodeContainerDirective, _super);
        function BrNodeContainerDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        BrNodeContainerDirective.prototype.getMapping = function () {
            var type = this.component.getType();
            if (type && type in this.page.mapping) {
                return this.page.mapping[type];
            }
            switch (type) {
                case spaSdk.TYPE_CONTAINER_INLINE: return BrContainerInlineComponent;
                case spaSdk.TYPE_CONTAINER_ORDERED_LIST: return BrContainerOrderedListComponent;
                case spaSdk.TYPE_CONTAINER_UNORDERED_LIST: return BrContainerUnorderedListComponent;
                case spaSdk.TYPE_CONTAINER_NO_MARKUP: return;
                default: return BrContainerBoxComponent;
            }
        };
        return BrNodeContainerDirective;
    }(BrNodeComponentDirective));
    BrNodeContainerDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[brNodeContainer]',
                    inputs: ['component:brNodeContainer'],
                },] }
    ];

    var BrNodeContainerItemDirective = /** @class */ (function (_super) {
        __extends(BrNodeContainerItemDirective, _super);
        function BrNodeContainerItemDirective(container, injector, componentFactoryResolver, node, page, changeDetectorRef) {
            var _this = _super.call(this, container, injector, componentFactoryResolver, node, page) || this;
            _this.changeDetectorRef = changeDetectorRef;
            _this.onUpdate = _this.onUpdate.bind(_this);
            return _this;
        }
        BrNodeContainerItemDirective.prototype.ngOnChanges = function (changes) {
            var _a, _b;
            (_b = (_a = changes.component) === null || _a === void 0 ? void 0 : _a.previousValue) === null || _b === void 0 ? void 0 : _b.off('update', this.onUpdate);
            _super.prototype.ngOnChanges.call(this, changes);
            this.component.on('update', this.onUpdate);
        };
        BrNodeContainerItemDirective.prototype.ngOnDestroy = function () {
            this.component.off('update', this.onUpdate);
        };
        BrNodeContainerItemDirective.prototype.onUpdate = function () {
            var _a;
            this.changeDetectorRef.markForCheck();
            (_a = this.page.state.getValue()) === null || _a === void 0 ? void 0 : _a.sync();
        };
        BrNodeContainerItemDirective.prototype.getMapping = function () {
            var type = this.component.getType();
            if (type && type in this.page.mapping) {
                return this.page.mapping[type];
            }
            return BrContainerItemUndefinedComponent;
        };
        return BrNodeContainerItemDirective;
    }(BrNodeComponentDirective));
    BrNodeContainerItemDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[brNodeContainerItem]',
                    inputs: ['component:brNodeContainerItem'],
                },] }
    ];
    BrNodeContainerItemDirective.ctorParameters = function () { return [
        { type: core.ViewContainerRef },
        { type: core.Injector },
        { type: core.ComponentFactoryResolver },
        { type: BrNodeDirective },
        { type: BrPageComponent },
        { type: core.ChangeDetectorRef }
    ]; };

    /*
     * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    var BrSdkModule = /** @class */ (function () {
        function BrSdkModule() {
        }
        return BrSdkModule;
    }());
    BrSdkModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [
                        BrComponentDirective,
                        BrContainerBoxComponent,
                        BrContainerInlineComponent,
                        BrContainerOrderedListComponent,
                        BrContainerUnorderedListComponent,
                        BrContainerItemUndefinedComponent,
                        BrManageContentButtonDirective,
                        BrManageMenuButtonDirective,
                        BrNodeComponentDirective,
                        BrNodeContainerDirective,
                        BrNodeContainerItemDirective,
                        BrNodeDirective,
                        BrNodeTypePipe,
                        BrPageComponent,
                    ],
                    entryComponents: [
                        BrContainerBoxComponent,
                        BrContainerInlineComponent,
                        BrContainerOrderedListComponent,
                        BrContainerUnorderedListComponent,
                        BrContainerItemUndefinedComponent,
                    ],
                    exports: [
                        BrComponentDirective,
                        BrManageContentButtonDirective,
                        BrManageMenuButtonDirective,
                        BrPageComponent,
                    ],
                    imports: [common.CommonModule, http.HttpClientModule],
                },] }
    ];

    /*
     * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *   http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BrComponentDirective = BrComponentDirective;
    exports.BrManageContentButtonDirective = BrManageContentButtonDirective;
    exports.BrManageMenuButtonDirective = BrManageMenuButtonDirective;
    exports.BrPageComponent = BrPageComponent;
    exports.BrSdkModule = BrSdkModule;
    exports.ɵa = BrNodeDirective;
    exports.ɵb = BrContainerBoxComponent;
    exports.ɵc = BrContainerInlineComponent;
    exports.ɵd = BrContainerOrderedListComponent;
    exports.ɵe = BrContainerUnorderedListComponent;
    exports.ɵf = BrContainerItemUndefinedComponent;
    exports.ɵg = BrMetaDirective;
    exports.ɵh = BrNodeComponentDirective;
    exports.ɵi = BrNodeContainerDirective;
    exports.ɵj = BrNodeContainerItemDirective;
    exports.ɵk = BrNodeTypePipe;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=bloomreach-ng-sdk.umd.js.map
