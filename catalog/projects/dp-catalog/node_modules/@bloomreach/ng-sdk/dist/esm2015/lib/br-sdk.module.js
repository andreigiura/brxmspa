/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { BrContainerItemUndefinedComponent } from './br-container-item-undefined/br-container-item-undefined.component';
import { BrContainerBoxComponent } from './br-container-box/br-container-box.component';
import { BrContainerInlineComponent } from './br-container-inline/br-container-inline.component';
import { BrContainerOrderedListComponent } from './br-container-ordered-list/br-container-ordered-list.component';
import { BrContainerUnorderedListComponent, } from './br-container-unordered-list/br-container-unordered-list.component';
import { BrComponentDirective } from './br-component.directive';
import { BrManageContentButtonDirective } from './br-manage-content-button.directive';
import { BrManageMenuButtonDirective } from './br-manage-menu-button.directive';
import { BrNodeTypePipe } from './br-node-type.pipe';
import { BrNodeComponentDirective } from './br-node-component.directive';
import { BrNodeContainerDirective } from './br-node-container.directive';
import { BrNodeContainerItemDirective } from './br-node-container-item.directive';
import { BrNodeDirective } from './br-node.directive';
import { BrPageComponent } from './br-page/br-page.component';
export class BrSdkModule {
}
BrSdkModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    BrComponentDirective,
                    BrContainerBoxComponent,
                    BrContainerInlineComponent,
                    BrContainerOrderedListComponent,
                    BrContainerUnorderedListComponent,
                    BrContainerItemUndefinedComponent,
                    BrManageContentButtonDirective,
                    BrManageMenuButtonDirective,
                    BrNodeComponentDirective,
                    BrNodeContainerDirective,
                    BrNodeContainerItemDirective,
                    BrNodeDirective,
                    BrNodeTypePipe,
                    BrPageComponent,
                ],
                entryComponents: [
                    BrContainerBoxComponent,
                    BrContainerInlineComponent,
                    BrContainerOrderedListComponent,
                    BrContainerUnorderedListComponent,
                    BrContainerItemUndefinedComponent,
                ],
                exports: [
                    BrComponentDirective,
                    BrManageContentButtonDirective,
                    BrManageMenuButtonDirective,
                    BrPageComponent,
                ],
                imports: [CommonModule, HttpClientModule],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnItc2RrLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi9zcmMvIiwic291cmNlcyI6WyJsaWIvYnItc2RrLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHFFQUFxRSxDQUFDO0FBQ3hILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLGlFQUFpRSxDQUFDO0FBQ2xILE9BQU8sRUFDTCxpQ0FBaUMsR0FDbEMsTUFBTSxxRUFBcUUsQ0FBQztBQUM3RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN0RixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDekUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDekUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDbEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQWtDOUQsTUFBTSxPQUFPLFdBQVc7OztZQWhDdkIsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWixvQkFBb0I7b0JBQ3BCLHVCQUF1QjtvQkFDdkIsMEJBQTBCO29CQUMxQiwrQkFBK0I7b0JBQy9CLGlDQUFpQztvQkFDakMsaUNBQWlDO29CQUNqQyw4QkFBOEI7b0JBQzlCLDJCQUEyQjtvQkFDM0Isd0JBQXdCO29CQUN4Qix3QkFBd0I7b0JBQ3hCLDRCQUE0QjtvQkFDNUIsZUFBZTtvQkFDZixjQUFjO29CQUNkLGVBQWU7aUJBQ2hCO2dCQUNELGVBQWUsRUFBRTtvQkFDZix1QkFBdUI7b0JBQ3ZCLDBCQUEwQjtvQkFDMUIsK0JBQStCO29CQUMvQixpQ0FBaUM7b0JBQ2pDLGlDQUFpQztpQkFDbEM7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLG9CQUFvQjtvQkFDcEIsOEJBQThCO29CQUM5QiwyQkFBMkI7b0JBQzNCLGVBQWU7aUJBQ2hCO2dCQUNELE9BQU8sRUFBRSxDQUFFLFlBQVksRUFBRSxnQkFBZ0IsQ0FBRTthQUM1QyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBIaXBwbyBCLlYuIChodHRwOi8vd3d3Lm9uZWhpcHBvLmNvbSlcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQnJDb250YWluZXJJdGVtVW5kZWZpbmVkQ29tcG9uZW50IH0gZnJvbSAnLi9ici1jb250YWluZXItaXRlbS11bmRlZmluZWQvYnItY29udGFpbmVyLWl0ZW0tdW5kZWZpbmVkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCckNvbnRhaW5lckJveENvbXBvbmVudCB9IGZyb20gJy4vYnItY29udGFpbmVyLWJveC9ici1jb250YWluZXItYm94LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCckNvbnRhaW5lcklubGluZUNvbXBvbmVudCB9IGZyb20gJy4vYnItY29udGFpbmVyLWlubGluZS9ici1jb250YWluZXItaW5saW5lLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCckNvbnRhaW5lck9yZGVyZWRMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9ici1jb250YWluZXItb3JkZXJlZC1saXN0L2JyLWNvbnRhaW5lci1vcmRlcmVkLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIEJyQ29udGFpbmVyVW5vcmRlcmVkTGlzdENvbXBvbmVudCxcbn0gZnJvbSAnLi9ici1jb250YWluZXItdW5vcmRlcmVkLWxpc3QvYnItY29udGFpbmVyLXVub3JkZXJlZC1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCckNvbXBvbmVudERpcmVjdGl2ZSB9IGZyb20gJy4vYnItY29tcG9uZW50LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCck1hbmFnZUNvbnRlbnRCdXR0b25EaXJlY3RpdmUgfSBmcm9tICcuL2JyLW1hbmFnZS1jb250ZW50LWJ1dHRvbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQnJNYW5hZ2VNZW51QnV0dG9uRGlyZWN0aXZlIH0gZnJvbSAnLi9ici1tYW5hZ2UtbWVudS1idXR0b24uZGlyZWN0aXZlJztcbmltcG9ydCB7IEJyTm9kZVR5cGVQaXBlIH0gZnJvbSAnLi9ici1ub2RlLXR5cGUucGlwZSc7XG5pbXBvcnQgeyBCck5vZGVDb21wb25lbnREaXJlY3RpdmUgfSBmcm9tICcuL2JyLW5vZGUtY29tcG9uZW50LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCck5vZGVDb250YWluZXJEaXJlY3RpdmUgfSBmcm9tICcuL2JyLW5vZGUtY29udGFpbmVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCck5vZGVDb250YWluZXJJdGVtRGlyZWN0aXZlIH0gZnJvbSAnLi9ici1ub2RlLWNvbnRhaW5lci1pdGVtLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCck5vZGVEaXJlY3RpdmUgfSBmcm9tICcuL2JyLW5vZGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IEJyUGFnZUNvbXBvbmVudCB9IGZyb20gJy4vYnItcGFnZS9ici1wYWdlLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIEJyQ29tcG9uZW50RGlyZWN0aXZlLFxuICAgIEJyQ29udGFpbmVyQm94Q29tcG9uZW50LFxuICAgIEJyQ29udGFpbmVySW5saW5lQ29tcG9uZW50LFxuICAgIEJyQ29udGFpbmVyT3JkZXJlZExpc3RDb21wb25lbnQsXG4gICAgQnJDb250YWluZXJVbm9yZGVyZWRMaXN0Q29tcG9uZW50LFxuICAgIEJyQ29udGFpbmVySXRlbVVuZGVmaW5lZENvbXBvbmVudCxcbiAgICBCck1hbmFnZUNvbnRlbnRCdXR0b25EaXJlY3RpdmUsXG4gICAgQnJNYW5hZ2VNZW51QnV0dG9uRGlyZWN0aXZlLFxuICAgIEJyTm9kZUNvbXBvbmVudERpcmVjdGl2ZSxcbiAgICBCck5vZGVDb250YWluZXJEaXJlY3RpdmUsXG4gICAgQnJOb2RlQ29udGFpbmVySXRlbURpcmVjdGl2ZSxcbiAgICBCck5vZGVEaXJlY3RpdmUsXG4gICAgQnJOb2RlVHlwZVBpcGUsXG4gICAgQnJQYWdlQ29tcG9uZW50LFxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtcbiAgICBCckNvbnRhaW5lckJveENvbXBvbmVudCxcbiAgICBCckNvbnRhaW5lcklubGluZUNvbXBvbmVudCxcbiAgICBCckNvbnRhaW5lck9yZGVyZWRMaXN0Q29tcG9uZW50LFxuICAgIEJyQ29udGFpbmVyVW5vcmRlcmVkTGlzdENvbXBvbmVudCxcbiAgICBCckNvbnRhaW5lckl0ZW1VbmRlZmluZWRDb21wb25lbnQsXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBCckNvbXBvbmVudERpcmVjdGl2ZSxcbiAgICBCck1hbmFnZUNvbnRlbnRCdXR0b25EaXJlY3RpdmUsXG4gICAgQnJNYW5hZ2VNZW51QnV0dG9uRGlyZWN0aXZlLFxuICAgIEJyUGFnZUNvbXBvbmVudCxcbiAgXSxcbiAgaW1wb3J0czogWyBDb21tb25Nb2R1bGUsIEh0dHBDbGllbnRNb2R1bGUgXSxcbn0pXG5leHBvcnQgY2xhc3MgQnJTZGtNb2R1bGUgeyB9XG4iXX0=