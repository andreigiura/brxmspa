/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Directive, Input, Optional, TemplateRef, ViewContainerRef } from '@angular/core';
import { TYPE_MANAGE_CONTENT_BUTTON } from '@bloomreach/spa-sdk';
import { BrMetaDirective } from './br-meta.directive';
import { BrPageComponent } from './br-page/br-page.component';
/**
 * The button direcrtive that opens for editing a content.
 */
export class BrManageContentButtonDirective extends BrMetaDirective {
    constructor(container, template, page) {
        super(container, template);
        this.page = page;
    }
    ngOnChanges(changes) {
        var _a, _b;
        this.meta = (_b = (_a = this.page) === null || _a === void 0 ? void 0 : _a.state.getValue()) === null || _b === void 0 ? void 0 : _b.getButton(TYPE_MANAGE_CONTENT_BUTTON, this);
        super.ngOnChanges(changes);
    }
}
BrManageContentButtonDirective.decorators = [
    { type: Directive, args: [{ selector: '[brManageContentButton]' },] }
];
BrManageContentButtonDirective.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: TemplateRef, decorators: [{ type: Optional }] },
    { type: BrPageComponent, decorators: [{ type: Optional }] }
];
BrManageContentButtonDirective.propDecorators = {
    content: [{ type: Input, args: ['brManageContentButton',] }],
    documentTemplateQuery: [{ type: Input }],
    folderTemplateQuery: [{ type: Input }],
    path: [{ type: Input }],
    parameter: [{ type: Input }],
    relative: [{ type: Input }],
    root: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnItbWFuYWdlLWNvbnRlbnQtYnV0dG9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi9zcmMvIiwic291cmNlcyI6WyJsaWIvYnItbWFuYWdlLWNvbnRlbnQtYnV0dG9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFhLFFBQVEsRUFBaUIsV0FBVyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BILE9BQU8sRUFBdUIsMEJBQTBCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRTlEOztHQUVHO0FBRUgsTUFBTSxPQUFPLDhCQUErQixTQUFRLGVBQWU7SUFlakUsWUFDRSxTQUEyQixFQUNmLFFBQTZCLEVBQ3JCLElBQXNCO1FBRTFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFGUCxTQUFJLEdBQUosSUFBSSxDQUFrQjtJQUc1QyxDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQXNCOztRQUNoQyxJQUFJLENBQUMsSUFBSSxlQUFHLElBQUksQ0FBQyxJQUFJLDBDQUFFLEtBQUssQ0FBQyxRQUFRLDRDQUFJLFNBQVMsQ0FBQywwQkFBMEIsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVyRixLQUFLLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdCLENBQUM7OztZQTVCRixTQUFTLFNBQUMsRUFBRSxRQUFRLEVBQUUseUJBQXlCLEVBQUU7OztZQVIwQixnQkFBZ0I7WUFBN0IsV0FBVyx1QkEwQnJFLFFBQVE7WUF2QkosZUFBZSx1QkF3Qm5CLFFBQVE7OztzQkFqQlYsS0FBSyxTQUFDLHVCQUF1QjtvQ0FFN0IsS0FBSztrQ0FFTCxLQUFLO21CQUVMLEtBQUs7d0JBRUwsS0FBSzt1QkFFTCxLQUFLO21CQUVMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMjAgSGlwcG8gQi5WLiAoaHR0cDovL3d3dy5vbmVoaXBwby5jb20pXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPbkNoYW5nZXMsIE9wdGlvbmFsLCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWFuYWdlQ29udGVudEJ1dHRvbiwgVFlQRV9NQU5BR0VfQ09OVEVOVF9CVVRUT04gfSBmcm9tICdAYmxvb21yZWFjaC9zcGEtc2RrJztcbmltcG9ydCB7IEJyTWV0YURpcmVjdGl2ZSB9IGZyb20gJy4vYnItbWV0YS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQnJQYWdlQ29tcG9uZW50IH0gZnJvbSAnLi9ici1wYWdlL2JyLXBhZ2UuY29tcG9uZW50JztcblxuLyoqXG4gKiBUaGUgYnV0dG9uIGRpcmVjcnRpdmUgdGhhdCBvcGVucyBmb3IgZWRpdGluZyBhIGNvbnRlbnQuXG4gKi9cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tick1hbmFnZUNvbnRlbnRCdXR0b25dJyB9KVxuZXhwb3J0IGNsYXNzIEJyTWFuYWdlQ29udGVudEJ1dHRvbkRpcmVjdGl2ZSBleHRlbmRzIEJyTWV0YURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgTWFuYWdlQ29udGVudEJ1dHRvbiB7XG4gIEBJbnB1dCgnYnJNYW5hZ2VDb250ZW50QnV0dG9uJykgY29udGVudD86IE1hbmFnZUNvbnRlbnRCdXR0b25bJ2NvbnRlbnQnXTtcblxuICBASW5wdXQoKSBkb2N1bWVudFRlbXBsYXRlUXVlcnk/OiBNYW5hZ2VDb250ZW50QnV0dG9uWydkb2N1bWVudFRlbXBsYXRlUXVlcnknXTtcblxuICBASW5wdXQoKSBmb2xkZXJUZW1wbGF0ZVF1ZXJ5PzogTWFuYWdlQ29udGVudEJ1dHRvblsnZm9sZGVyVGVtcGxhdGVRdWVyeSddO1xuXG4gIEBJbnB1dCgpIHBhdGg/OiBNYW5hZ2VDb250ZW50QnV0dG9uWydwYXRoJ107XG5cbiAgQElucHV0KCkgcGFyYW1ldGVyPzogTWFuYWdlQ29udGVudEJ1dHRvblsncGFyYW1ldGVyJ107XG5cbiAgQElucHV0KCkgcmVsYXRpdmU/OiBNYW5hZ2VDb250ZW50QnV0dG9uWydyZWxhdGl2ZSddO1xuXG4gIEBJbnB1dCgpIHJvb3Q/OiBNYW5hZ2VDb250ZW50QnV0dG9uWydyb290J107XG5cbiAgY29uc3RydWN0b3IoXG4gICAgY29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmLFxuICAgIEBPcHRpb25hbCgpIHRlbXBsYXRlPzogVGVtcGxhdGVSZWY8bmV2ZXI+LFxuICAgIEBPcHRpb25hbCgpIHByaXZhdGUgcGFnZT86IEJyUGFnZUNvbXBvbmVudCxcbiAgKSB7XG4gICAgc3VwZXIoY29udGFpbmVyLCB0ZW1wbGF0ZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG4gICAgdGhpcy5tZXRhID0gdGhpcy5wYWdlPy5zdGF0ZS5nZXRWYWx1ZSgpPy5nZXRCdXR0b24oVFlQRV9NQU5BR0VfQ09OVEVOVF9CVVRUT04sIHRoaXMpO1xuXG4gICAgc3VwZXIubmdPbkNoYW5nZXMoY2hhbmdlcyk7XG4gIH1cbn1cbiJdfQ==