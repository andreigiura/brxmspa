import { isPlatformServer, isPlatformBrowser, CommonModule } from '@angular/common';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { Component, Input, ChangeDetectionStrategy, HostBinding, Directive, ChangeDetectorRef, NgZone, Inject, PLATFORM_ID, Optional, Output, ViewChild, ContentChild, TemplateRef, ViewContainerRef, Pipe, Injector, ComponentFactoryResolver, NgModule } from '@angular/core';
import { isPage, destroy, initialize, isComponent, TYPE_MANAGE_CONTENT_BUTTON, TYPE_MANAGE_MENU_BUTTON, isContainerItem, isContainer, TYPE_CONTAINER_NO_MARKUP, TYPE_CONTAINER_UNORDERED_LIST, TYPE_CONTAINER_ORDERED_LIST, TYPE_CONTAINER_INLINE } from '@bloomreach/spa-sdk';
import { makeStateKey, TransferState } from '@angular/platform-browser';
import { BehaviorSubject, Subject, of, from } from 'rxjs';
import { pairwise, pluck, filter, switchMap, take, mapTo, map } from 'rxjs/operators';

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/common/http';
import * as ɵngcc3 from '@angular/platform-browser';

const _c0 = ["class", "br-container-box"];
const _c1 = function (a0) { return { "hst-container-item": a0 }; };
function BrContainerBoxComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementContainer(1, 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const child_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r0.page.isPreview()));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("brComponent", child_r1);
} }
const _c2 = ["class", "br-container-inline"];
function BrContainerInlineComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 1);
    ɵngcc0.ɵɵelementContainer(1, 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const child_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r0.page.isPreview()));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("brComponent", child_r1);
} }
const _c3 = ["class", "br-container-ordered-list"];
function BrContainerOrderedListComponent_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 1);
    ɵngcc0.ɵɵelementContainer(1, 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const child_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r0.page.isPreview()));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("brComponent", child_r1);
} }
const _c4 = ["class", "br-container-unordered-list"];
function BrContainerUnorderedListComponent_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 1);
    ɵngcc0.ɵɵelementContainer(1, 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const child_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r0.page.isPreview()));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("brComponent", child_r1);
} }
const _c5 = ["brNode"];
function BrPageComponent_ng_template_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 7);
} if (rf & 2) {
    const component_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("brNodeContainerItem", component_r3);
} }
function BrPageComponent_ng_template_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 8);
} if (rf & 2) {
    const component_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("brNodeContainer", component_r3);
} }
function BrPageComponent_ng_template_0_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 9);
} if (rf & 2) {
    const component_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("brNodeComponent", component_r3);
} }
function BrPageComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 2);
    ɵngcc0.ɵɵelementContainerStart(1, 3);
    ɵngcc0.ɵɵpipe(2, "brNodeType");
    ɵngcc0.ɵɵtemplate(3, BrPageComponent_ng_template_0_ng_container_3_Template, 1, 1, "ng-container", 4);
    ɵngcc0.ɵɵtemplate(4, BrPageComponent_ng_template_0_ng_container_4_Template, 1, 1, "ng-container", 5);
    ɵngcc0.ɵɵtemplate(5, BrPageComponent_ng_template_0_ng_container_5_Template, 1, 1, "ng-container", 6);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const component_r3 = ctx.$implicit;
    const template_r4 = ctx.template;
    ɵngcc0.ɵɵproperty("brNode", component_r3)("brNodeTemplate", template_r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", ɵngcc0.ɵɵpipeBind1(2, 5, component_r3));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "container-item");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "container");
} }
function BrPageComponent_2_ng_template_0_Template(rf, ctx) { }
function BrPageComponent_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, BrPageComponent_2_ng_template_0_Template, 0, 0, "ng-template", 10);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0)("ngTemplateOutletContext", ctx_r2.context);
} }
class BrContainerItemUndefinedComponent {
}
BrContainerItemUndefinedComponent.ɵfac = function BrContainerItemUndefinedComponent_Factory(t) { return new (t || BrContainerItemUndefinedComponent)(); };
BrContainerItemUndefinedComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BrContainerItemUndefinedComponent, selectors: [["br-container-item-undefined"]], inputs: { component: "component" }, decls: 1, vars: 1, template: function BrContainerItemUndefinedComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0);
    } if (rf & 2) {
        ɵngcc0.ɵɵtextInterpolate1(" Component \"", ctx.component.getType(), "\" is not defined.\n");
    } }, encapsulation: 2 });
BrContainerItemUndefinedComponent.propDecorators = {
    component: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrContainerItemUndefinedComponent, [{
        type: Component,
        args: [{
                selector: 'br-container-item-undefined',
                template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\nComponent \"{{ component.getType() }}\" is not defined.\n"
            }]
    }], null, { component: [{
            type: Input
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrContainerBoxComponent {
    get isPreview() {
        var _a;
        return (_a = this.page) === null || _a === void 0 ? void 0 : _a.isPreview();
    }
}
BrContainerBoxComponent.ɵfac = function BrContainerBoxComponent_Factory(t) { return new (t || BrContainerBoxComponent)(); };
BrContainerBoxComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BrContainerBoxComponent, selectors: [["div", 8, "br-container-box"]], hostVars: 2, hostBindings: function BrContainerBoxComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("hst-container", ctx.isPreview);
    } }, inputs: { component: "component", page: "page" }, attrs: _c0, decls: 1, vars: 1, consts: [[3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], [3, "brComponent"]], template: function BrContainerBoxComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BrContainerBoxComponent_div_0_Template, 2, 4, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.component.getChildren());
    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgClass, BrComponentDirective]; }, encapsulation: 2, changeDetection: 0 });
BrContainerBoxComponent.propDecorators = {
    component: [{ type: Input }],
    page: [{ type: Input }],
    isPreview: [{ type: HostBinding, args: ['class.hst-container',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrContainerBoxComponent, [{
        type: Component,
        args: [{
                selector: 'div.br-container-box',
                template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<div *ngFor=\"let child of component.getChildren()\" [ngClass]=\"{'hst-container-item': page.isPreview()}\">\n  <ng-container [brComponent]=\"child\"></ng-container>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { isPreview: [{
            type: HostBinding,
            args: ['class.hst-container']
        }], component: [{
            type: Input
        }], page: [{
            type: Input
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrContainerInlineComponent {
    get isPreview() {
        var _a;
        return (_a = this.page) === null || _a === void 0 ? void 0 : _a.isPreview();
    }
}
BrContainerInlineComponent.ɵfac = function BrContainerInlineComponent_Factory(t) { return new (t || BrContainerInlineComponent)(); };
BrContainerInlineComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BrContainerInlineComponent, selectors: [["div", 8, "br-container-inline"]], hostVars: 2, hostBindings: function BrContainerInlineComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("hst-container", ctx.isPreview);
    } }, inputs: { component: "component", page: "page" }, attrs: _c2, decls: 1, vars: 1, consts: [[3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], [3, "brComponent"]], template: function BrContainerInlineComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BrContainerInlineComponent_span_0_Template, 2, 4, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.component.getChildren());
    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgClass, BrComponentDirective]; }, encapsulation: 2, changeDetection: 0 });
BrContainerInlineComponent.propDecorators = {
    component: [{ type: Input }],
    page: [{ type: Input }],
    isPreview: [{ type: HostBinding, args: ['class.hst-container',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrContainerInlineComponent, [{
        type: Component,
        args: [{
                selector: 'div.br-container-inline',
                template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<span *ngFor=\"let child of component.getChildren()\" [ngClass]=\"{'hst-container-item': page.isPreview()}\">\n  <ng-container [brComponent]=\"child\"></ng-container>\n</span>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { isPreview: [{
            type: HostBinding,
            args: ['class.hst-container']
        }], component: [{
            type: Input
        }], page: [{
            type: Input
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrContainerOrderedListComponent {
    get isPreview() {
        var _a;
        return (_a = this.page) === null || _a === void 0 ? void 0 : _a.isPreview();
    }
}
BrContainerOrderedListComponent.ɵfac = function BrContainerOrderedListComponent_Factory(t) { return new (t || BrContainerOrderedListComponent)(); };
BrContainerOrderedListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BrContainerOrderedListComponent, selectors: [["ol", 8, "br-container-ordered-list"]], hostVars: 2, hostBindings: function BrContainerOrderedListComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("hst-container", ctx.isPreview);
    } }, inputs: { component: "component", page: "page" }, attrs: _c3, decls: 1, vars: 1, consts: [[3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], [3, "brComponent"]], template: function BrContainerOrderedListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BrContainerOrderedListComponent_li_0_Template, 2, 4, "li", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.component.getChildren());
    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgClass, BrComponentDirective]; }, encapsulation: 2, changeDetection: 0 });
BrContainerOrderedListComponent.propDecorators = {
    component: [{ type: Input }],
    page: [{ type: Input }],
    isPreview: [{ type: HostBinding, args: ['class.hst-container',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrContainerOrderedListComponent, [{
        type: Component,
        args: [{
                selector: 'ol.br-container-ordered-list',
                template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<li *ngFor=\"let child of component.getChildren()\" [ngClass]=\"{'hst-container-item': page.isPreview()}\">\n  <ng-container [brComponent]=\"child\"></ng-container>\n</li>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { isPreview: [{
            type: HostBinding,
            args: ['class.hst-container']
        }], component: [{
            type: Input
        }], page: [{
            type: Input
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrContainerUnorderedListComponent {
    get isPreview() {
        var _a;
        return (_a = this.page) === null || _a === void 0 ? void 0 : _a.isPreview();
    }
}
BrContainerUnorderedListComponent.ɵfac = function BrContainerUnorderedListComponent_Factory(t) { return new (t || BrContainerUnorderedListComponent)(); };
BrContainerUnorderedListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BrContainerUnorderedListComponent, selectors: [["ul", 8, "br-container-unordered-list"]], hostVars: 2, hostBindings: function BrContainerUnorderedListComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("hst-container", ctx.isPreview);
    } }, inputs: { component: "component", page: "page" }, attrs: _c4, decls: 1, vars: 1, consts: [[3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], [3, "brComponent"]], template: function BrContainerUnorderedListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BrContainerUnorderedListComponent_li_0_Template, 2, 4, "li", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.component.getChildren());
    } }, directives: function () { return [ɵngcc1.NgForOf, ɵngcc1.NgClass, BrComponentDirective]; }, encapsulation: 2, changeDetection: 0 });
BrContainerUnorderedListComponent.propDecorators = {
    component: [{ type: Input }],
    page: [{ type: Input }],
    isPreview: [{ type: HostBinding, args: ['class.hst-container',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrContainerUnorderedListComponent, [{
        type: Component,
        args: [{
                selector: 'ul.br-container-unordered-list',
                template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<li *ngFor=\"let child of component.getChildren()\" [ngClass]=\"{'hst-container-item': page.isPreview()}\">\n  <ng-container [brComponent]=\"child\"></ng-container>\n</li>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { isPreview: [{
            type: HostBinding,
            args: ['class.hst-container']
        }], component: [{
            type: Input
        }], page: [{
            type: Input
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrNodeDirective {
}
BrNodeDirective.ɵfac = function BrNodeDirective_Factory(t) { return new (t || BrNodeDirective)(); };
BrNodeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BrNodeDirective, selectors: [["", "brNode", ""]], inputs: { component: ["brNode", "component"], template: ["brNodeTemplate", "template"] } });
BrNodeDirective.propDecorators = {
    component: [{ type: Input, args: ['brNode',] }],
    template: [{ type: Input, args: ['brNodeTemplate',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrNodeDirective, [{
        type: Directive,
        args: [{
                selector: '[brNode]'
            }]
    }], null, { component: [{
            type: Input,
            args: ['brNode']
        }], template: [{
            type: Input,
            args: ['brNodeTemplate']
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The brXM page.
 */
class BrPageComponent {
    constructor(changeDetectorRef, httpClient, zone, platform, transferState) {
        this.changeDetectorRef = changeDetectorRef;
        this.httpClient = httpClient;
        this.platform = platform;
        this.transferState = transferState;
        /**
         * The brXM and Angular components mapping.
         */
        this.mapping = {};
        /**
         * The TransferState key is used to transfer the state from the server-side to the client-side.
         * By default, it equals to `brPage`.
         * If `false` is passed then the state transferring feature will be disabled.
         */
        this.stateKey = makeStateKey('brPage');
        /**
         * The current state of the page component.
         */
        this.state = new BehaviorSubject(undefined);
        this.afterContentChecked$ = new Subject();
        this.request = this.request.bind(this);
        this.state.pipe(pairwise(), pluck(0), filter(isPage))
            .subscribe(destroy);
        this.state.pipe(filter(isPage), switchMap((page) => this.afterContentChecked$.pipe(take(1), mapTo(page))))
            .subscribe((page) => zone.runOutsideAngular(() => page.sync()));
        this.state.pipe(filter(() => isPlatformServer(this.platform)), filter(isPage))
            .subscribe((page) => { var _a; return this.stateKey && ((_a = this.transferState) === null || _a === void 0 ? void 0 : _a.set(this.stateKey, page.toJSON())); });
    }
    get context() {
        const page = this.state.getValue();
        const component = page === null || page === void 0 ? void 0 : page.getComponent();
        if (!page || !component) {
            return;
        }
        return {
            component,
            page,
            $implicit: component,
            template: this.template,
        };
    }
    ngOnChanges(changes) {
        var _a, _b, _c, _d, _e, _f;
        if (changes.configuration || changes.page) {
            this.initialize((_a = changes.page) === null || _a === void 0 ? void 0 : _a.currentValue);
        }
        if (((_b = changes.stateKey) === null || _b === void 0 ? void 0 : _b.previousValue) && isPlatformServer(this.platform)) {
            if (changes.stateKey.currentValue && ((_c = this.transferState) === null || _c === void 0 ? void 0 : _c.hasKey(changes.stateKey.previousValue))) {
                (_d = this.transferState) === null || _d === void 0 ? void 0 : _d.set(changes.stateKey.currentValue, (_e = this.transferState) === null || _e === void 0 ? void 0 : _e.get(changes.stateKey.previousValue, undefined));
            }
            (_f = this.transferState) === null || _f === void 0 ? void 0 : _f.remove(changes.stateKey.previousValue);
        }
    }
    ngAfterContentChecked() {
        this.afterContentChecked$.next();
    }
    ngOnDestroy() {
        this.state.next(undefined);
        this.state.complete();
        this.afterContentChecked$.complete();
    }
    initialize(page) {
        var _a, _b, _c;
        if (this.stateKey && isPlatformBrowser(this.platform) && ((_a = this.transferState) === null || _a === void 0 ? void 0 : _a.hasKey(this.stateKey))) {
            page = page !== null && page !== void 0 ? page : (_b = this.transferState) === null || _b === void 0 ? void 0 : _b.get(this.stateKey, undefined);
            (_c = this.transferState) === null || _c === void 0 ? void 0 : _c.remove(this.stateKey);
        }
        const configuration = Object.assign({ httpClient: this.request }, this.configuration);
        const observable = page
            ? of(initialize(configuration, page))
            : from(initialize(configuration));
        observable.subscribe(state => {
            this.state.next(state);
            this.changeDetectorRef.detectChanges();
        });
    }
    request(...[{ data: body, headers, method, url }]) {
        return this.httpClient.request(method, url, {
            body,
            headers: headers,
            responseType: 'json'
        })
            .pipe(map(data => ({ data })))
            .toPromise();
    }
}
BrPageComponent.ɵfac = function BrPageComponent_Factory(t) { return new (t || BrPageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.HttpClient), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TransferState, 8)); };
BrPageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BrPageComponent, selectors: [["br-page"]], contentQueries: function BrPageComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, viewQuery: function BrPageComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c5, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.node = _t.first);
    } }, inputs: { mapping: "mapping", stateKey: "stateKey", configuration: "configuration", page: "page" }, outputs: { state: "state" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 1, consts: [["brNode", ""], [4, "ngIf"], [3, "brNode", "brNodeTemplate"], [3, "ngSwitch"], [3, "brNodeContainerItem", 4, "ngSwitchCase"], [3, "brNodeContainer", 4, "ngSwitchCase"], [3, "brNodeComponent", 4, "ngSwitchDefault"], [3, "brNodeContainerItem"], [3, "brNodeContainer"], [3, "brNodeComponent"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function BrPageComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BrPageComponent_ng_template_0_Template, 6, 7, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, BrPageComponent_2_Template, 1, 2, undefined, 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.context);
    } }, directives: function () { return [ɵngcc1.NgIf, BrNodeDirective, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, BrNodeContainerItemDirective,
        BrNodeContainerDirective,
        BrNodeComponentDirective, ɵngcc1.NgTemplateOutlet]; }, pipes: function () { return [BrNodeTypePipe]; }, encapsulation: 2, changeDetection: 0 });
BrPageComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: HttpClient },
    { type: NgZone },
    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
    { type: TransferState, decorators: [{ type: Optional }] }
];
BrPageComponent.propDecorators = {
    configuration: [{ type: Input }],
    mapping: [{ type: Input }],
    page: [{ type: Input }],
    stateKey: [{ type: Input }],
    state: [{ type: Output }],
    node: [{ type: ViewChild, args: ['brNode', { static: true },] }],
    template: [{ type: ContentChild, args: [TemplateRef, { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrPageComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'br-page',
                template: "<!--\n  Copyright 2020 Hippo B.V. (http://www.onehippo.com)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n\n<ng-template #brNode let-component let-template=\"template\">\n  <ng-container [brNode]=\"component\" [brNodeTemplate]=\"template\">\n    <ng-container [ngSwitch]=\"component | brNodeType\">\n      <ng-container *ngSwitchCase=\"'container-item'\" [brNodeContainerItem]=\"component\"></ng-container>\n      <ng-container *ngSwitchCase=\"'container'\" [brNodeContainer]=\"component\"></ng-container>\n      <ng-container *ngSwitchDefault [brNodeComponent]=\"component\"></ng-container>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template *ngIf=\"context\" [ngTemplateOutlet]=\"brNode\" [ngTemplateOutletContext]=\"context\"></ng-template>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.HttpClient }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }, { type: ɵngcc3.TransferState, decorators: [{
                type: Optional
            }] }]; }, { mapping: [{
            type: Input
        }], stateKey: [{
            type: Input
        }], state: [{
            type: Output
        }], configuration: [{
            type: Input
        }], page: [{
            type: Input
        }], node: [{
            type: ViewChild,
            args: ['brNode', { static: true }]
        }], template: [{
            type: ContentChild,
            args: [TemplateRef, { static: true }]
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The brXM component.
 */
class BrComponentDirective {
    constructor(container, template, node, page) {
        this.container = container;
        this.template = template;
        this.node = node;
        this.page = page;
    }
    ngOnChanges(changes) {
        if (!changes.component || changes.component.isFirstChange()) {
            return;
        }
        this.ngOnDestroy();
        this.ngOnInit();
    }
    ngOnDestroy() {
        this.container.clear();
    }
    ngOnInit() {
        var _a, _b;
        const page = (_a = this.page) === null || _a === void 0 ? void 0 : _a.state.getValue();
        if (!page) {
            return;
        }
        // tslint:disable: no-non-null-assertion
        (_b = this.components) === null || _b === void 0 ? void 0 : _b.forEach((component) => this.container.createEmbeddedView(this.page.node, {
            component,
            page,
            $implicit: component,
            template: this.template,
        }));
        // tslint:enable: no-non-null-assertion
    }
    get context() {
        var _a, _b;
        if (this.node) {
            return this.node.component;
        }
        return (_b = (_a = this.page) === null || _a === void 0 ? void 0 : _a.state.getValue()) === null || _b === void 0 ? void 0 : _b.getComponent();
    }
    get components() {
        var _a, _b;
        if (isComponent(this.component)) {
            return [this.component];
        }
        if (!this.component) {
            return (_a = this.context) === null || _a === void 0 ? void 0 : _a.getChildren();
        }
        const component = (_b = this.context) === null || _b === void 0 ? void 0 : _b.getComponent(...this.component.split('/'));
        return component && [component];
    }
}
BrComponentDirective.ɵfac = function BrComponentDirective_Factory(t) { return new (t || BrComponentDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8), ɵngcc0.ɵɵdirectiveInject(BrNodeDirective, 8), ɵngcc0.ɵɵdirectiveInject(BrPageComponent, 8)); };
BrComponentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BrComponentDirective, selectors: [["", "brComponent", ""]], inputs: { component: ["brComponent", "component"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
BrComponentDirective.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: TemplateRef, decorators: [{ type: Optional }] },
    { type: BrNodeDirective, decorators: [{ type: Optional }] },
    { type: BrPageComponent, decorators: [{ type: Optional }] }
];
BrComponentDirective.propDecorators = {
    component: [{ type: Input, args: ['brComponent',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrComponentDirective, [{
        type: Directive,
        args: [{ selector: '[brComponent]' }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef, decorators: [{
                type: Optional
            }] }, { type: BrNodeDirective, decorators: [{
                type: Optional
            }] }, { type: BrPageComponent, decorators: [{
                type: Optional
            }] }]; }, { component: [{
            type: Input,
            args: ['brComponent']
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrMetaDirective {
    constructor(container, template) {
        this.container = container;
        this.template = template;
    }
    ngOnChanges(changes) {
        var _a, _b;
        (_a = this.clear) === null || _a === void 0 ? void 0 : _a.call(this);
        this.container.clear();
        const { head, tail } = this.render();
        this.clear = head && tail && ((_b = this.meta) === null || _b === void 0 ? void 0 : _b.render(head, tail));
    }
    ngOnDestroy() {
        var _a;
        (_a = this.clear) === null || _a === void 0 ? void 0 : _a.call(this);
        this.container.clear();
    }
    render() {
        if (!this.template) {
            return {
                head: this.container.element.nativeElement,
                tail: this.container.element.nativeElement,
            };
        }
        const embeddedViewRef = this.container.createEmbeddedView(this.template);
        const [head] = embeddedViewRef.rootNodes;
        const [tail] = embeddedViewRef.rootNodes.slice(-1);
        return { head, tail };
    }
}
BrMetaDirective.ɵfac = function BrMetaDirective_Factory(t) { return new (t || BrMetaDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8)); };
BrMetaDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BrMetaDirective, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
BrMetaDirective.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: TemplateRef, decorators: [{ type: Optional }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrMetaDirective, [{
        type: Directive
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef, decorators: [{
                type: Optional
            }] }]; }, null); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The button direcrtive that opens for editing a content.
 */
class BrManageContentButtonDirective extends BrMetaDirective {
    constructor(container, template, page) {
        super(container, template);
        this.page = page;
    }
    ngOnChanges(changes) {
        var _a, _b;
        this.meta = (_b = (_a = this.page) === null || _a === void 0 ? void 0 : _a.state.getValue()) === null || _b === void 0 ? void 0 : _b.getButton(TYPE_MANAGE_CONTENT_BUTTON, this);
        super.ngOnChanges(changes);
    }
}
BrManageContentButtonDirective.ɵfac = function BrManageContentButtonDirective_Factory(t) { return new (t || BrManageContentButtonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8), ɵngcc0.ɵɵdirectiveInject(BrPageComponent, 8)); };
BrManageContentButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BrManageContentButtonDirective, selectors: [["", "brManageContentButton", ""]], inputs: { content: ["brManageContentButton", "content"], documentTemplateQuery: "documentTemplateQuery", folderTemplateQuery: "folderTemplateQuery", path: "path", parameter: "parameter", relative: "relative", root: "root" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });
BrManageContentButtonDirective.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: TemplateRef, decorators: [{ type: Optional }] },
    { type: BrPageComponent, decorators: [{ type: Optional }] }
];
BrManageContentButtonDirective.propDecorators = {
    content: [{ type: Input, args: ['brManageContentButton',] }],
    documentTemplateQuery: [{ type: Input }],
    folderTemplateQuery: [{ type: Input }],
    path: [{ type: Input }],
    parameter: [{ type: Input }],
    relative: [{ type: Input }],
    root: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrManageContentButtonDirective, [{
        type: Directive,
        args: [{ selector: '[brManageContentButton]' }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef, decorators: [{
                type: Optional
            }] }, { type: BrPageComponent, decorators: [{
                type: Optional
            }] }]; }, { content: [{
            type: Input,
            args: ['brManageContentButton']
        }], documentTemplateQuery: [{
            type: Input
        }], folderTemplateQuery: [{
            type: Input
        }], path: [{
            type: Input
        }], parameter: [{
            type: Input
        }], relative: [{
            type: Input
        }], root: [{
            type: Input
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The button directive that opens a menu editor.
 */
class BrManageMenuButtonDirective extends BrMetaDirective {
    constructor(container, template, page) {
        super(container, template);
        this.page = page;
    }
    ngOnChanges(changes) {
        var _a, _b;
        this.meta = (_b = (_a = this.page) === null || _a === void 0 ? void 0 : _a.state.getValue()) === null || _b === void 0 ? void 0 : _b.getButton(TYPE_MANAGE_MENU_BUTTON, this.menu);
        super.ngOnChanges(changes);
    }
}
BrManageMenuButtonDirective.ɵfac = function BrManageMenuButtonDirective_Factory(t) { return new (t || BrManageMenuButtonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8), ɵngcc0.ɵɵdirectiveInject(BrPageComponent, 8)); };
BrManageMenuButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BrManageMenuButtonDirective, selectors: [["", "brManageMenuButton", ""]], inputs: { menu: ["brManageMenuButton", "menu"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });
BrManageMenuButtonDirective.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: TemplateRef, decorators: [{ type: Optional }] },
    { type: BrPageComponent, decorators: [{ type: Optional }] }
];
BrManageMenuButtonDirective.propDecorators = {
    menu: [{ type: Input, args: ['brManageMenuButton',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrManageMenuButtonDirective, [{
        type: Directive,
        args: [{ selector: '[brManageMenuButton]' }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef, decorators: [{
                type: Optional
            }] }, { type: BrPageComponent, decorators: [{
                type: Optional
            }] }]; }, { menu: [{
            type: Input,
            args: ['brManageMenuButton']
        }] }); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrNodeTypePipe {
    transform(component) {
        if (isContainerItem(component)) {
            return 'container-item';
        }
        if (isContainer(component)) {
            return 'container';
        }
        return 'component';
    }
}
BrNodeTypePipe.ɵfac = function BrNodeTypePipe_Factory(t) { return new (t || BrNodeTypePipe)(); };
BrNodeTypePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "brNodeType", type: BrNodeTypePipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrNodeTypePipe, [{
        type: Pipe,
        args: [{ name: 'brNodeType' }]
    }], null, null); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrNodeComponentDirective {
    constructor(container, injector, componentFactoryResolver, node, page) {
        this.container = container;
        this.injector = injector;
        this.componentFactoryResolver = componentFactoryResolver;
        this.node = node;
        this.page = page;
    }
    ngOnChanges(changes) {
        var _a;
        (_a = this.clear) === null || _a === void 0 ? void 0 : _a.call(this);
        this.container.clear();
        const { head, tail } = this.render();
        this.clear = head && tail && this.component.getMeta().render(head, tail);
    }
    getMapping() {
        return this.page.mapping[this.component.getName()];
    }
    render() {
        if (this.node.template) {
            return this.renderTemplate();
        }
        const component = this.getMapping();
        if (!component) {
            return this.renderChildren();
        }
        return this.renderMapping(component);
    }
    renderTemplate() {
        // tslint:disable: no-non-null-assertion
        const embeddedViewRef = this.container.createEmbeddedView(this.node.template, {
            $implicit: this.component,
            component: this.component,
            page: this.page.state.getValue(),
        });
        // tslint:enable: no-non-null-assertion
        const [head] = embeddedViewRef.rootNodes;
        const [tail] = embeddedViewRef.rootNodes.slice(-1);
        return { head, tail };
    }
    renderChildren() {
        var _a, _b;
        const nodes = this.component.getChildren()
            .map(component => this.container.createEmbeddedView(this.page.node, {
            component,
            $implicit: component,
            page: this.page.state.getValue(),
        }))
            .flatMap(view => view.rootNodes);
        const head = (_a = nodes[0]) !== null && _a !== void 0 ? _a : this.container.element.nativeElement;
        const tail = (_b = nodes[nodes.length - 1]) !== null && _b !== void 0 ? _b : head;
        return { head, tail };
    }
    renderMapping(component) {
        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);
        const componentRef = this.container.createComponent(componentFactory, undefined, this.injector);
        componentRef.instance.component = this.component;
        componentRef.instance.page = this.page.state.getValue();
        return {
            head: componentRef.location.nativeElement,
            tail: componentRef.location.nativeElement,
        };
    }
    ngOnDestroy() {
        var _a;
        (_a = this.clear) === null || _a === void 0 ? void 0 : _a.call(this);
        this.container.clear();
    }
}
BrNodeComponentDirective.ɵfac = function BrNodeComponentDirective_Factory(t) { return new (t || BrNodeComponentDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(BrNodeDirective), ɵngcc0.ɵɵdirectiveInject(BrPageComponent)); };
BrNodeComponentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BrNodeComponentDirective, selectors: [["", "brNodeComponent", ""]], inputs: { component: ["brNodeComponent", "component"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
BrNodeComponentDirective.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: Injector },
    { type: ComponentFactoryResolver },
    { type: BrNodeDirective },
    { type: BrPageComponent }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrNodeComponentDirective, [{
        type: Directive,
        args: [{
                selector: '[brNodeComponent]',
                inputs: ['component:brNodeComponent']
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ComponentFactoryResolver }, { type: BrNodeDirective }, { type: BrPageComponent }]; }, null); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrNodeContainerDirective extends BrNodeComponentDirective {
    getMapping() {
        const type = this.component.getType();
        if (type && type in this.page.mapping) {
            return this.page.mapping[type];
        }
        switch (type) {
            case TYPE_CONTAINER_INLINE: return BrContainerInlineComponent;
            case TYPE_CONTAINER_ORDERED_LIST: return BrContainerOrderedListComponent;
            case TYPE_CONTAINER_UNORDERED_LIST: return BrContainerUnorderedListComponent;
            case TYPE_CONTAINER_NO_MARKUP: return;
            default: return BrContainerBoxComponent;
        }
    }
}
BrNodeContainerDirective.ɵfac = function BrNodeContainerDirective_Factory(t) { return ɵBrNodeContainerDirective_BaseFactory(t || BrNodeContainerDirective); };
BrNodeContainerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BrNodeContainerDirective, selectors: [["", "brNodeContainer", ""]], inputs: { component: ["brNodeContainer", "component"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
const ɵBrNodeContainerDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(BrNodeContainerDirective);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrNodeContainerDirective, [{
        type: Directive,
        args: [{
                selector: '[brNodeContainer]',
                inputs: ['component:brNodeContainer']
            }]
    }], null, null); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrNodeContainerItemDirective extends BrNodeComponentDirective {
    constructor(container, injector, componentFactoryResolver, node, page, changeDetectorRef) {
        super(container, injector, componentFactoryResolver, node, page);
        this.changeDetectorRef = changeDetectorRef;
        this.onUpdate = this.onUpdate.bind(this);
    }
    ngOnChanges(changes) {
        var _a, _b;
        (_b = (_a = changes.component) === null || _a === void 0 ? void 0 : _a.previousValue) === null || _b === void 0 ? void 0 : _b.off('update', this.onUpdate);
        super.ngOnChanges(changes);
        this.component.on('update', this.onUpdate);
    }
    ngOnDestroy() {
        this.component.off('update', this.onUpdate);
    }
    onUpdate() {
        var _a;
        this.changeDetectorRef.markForCheck();
        (_a = this.page.state.getValue()) === null || _a === void 0 ? void 0 : _a.sync();
    }
    getMapping() {
        const type = this.component.getType();
        if (type && type in this.page.mapping) {
            return this.page.mapping[type];
        }
        return BrContainerItemUndefinedComponent;
    }
}
BrNodeContainerItemDirective.ɵfac = function BrNodeContainerItemDirective_Factory(t) { return new (t || BrNodeContainerItemDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(BrNodeDirective), ɵngcc0.ɵɵdirectiveInject(BrPageComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
BrNodeContainerItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BrNodeContainerItemDirective, selectors: [["", "brNodeContainerItem", ""]], inputs: { component: ["brNodeContainerItem", "component"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });
BrNodeContainerItemDirective.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: Injector },
    { type: ComponentFactoryResolver },
    { type: BrNodeDirective },
    { type: BrPageComponent },
    { type: ChangeDetectorRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrNodeContainerItemDirective, [{
        type: Directive,
        args: [{
                selector: '[brNodeContainerItem]',
                inputs: ['component:brNodeContainerItem']
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ComponentFactoryResolver }, { type: BrNodeDirective }, { type: BrPageComponent }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class BrSdkModule {
}
BrSdkModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BrSdkModule });
BrSdkModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BrSdkModule_Factory(t) { return new (t || BrSdkModule)(); }, imports: [[CommonModule, HttpClientModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrSdkModule, { declarations: function () { return [BrComponentDirective,
        BrContainerBoxComponent,
        BrContainerInlineComponent,
        BrContainerOrderedListComponent,
        BrContainerUnorderedListComponent,
        BrContainerItemUndefinedComponent,
        BrManageContentButtonDirective,
        BrManageMenuButtonDirective,
        BrNodeComponentDirective,
        BrNodeContainerDirective,
        BrNodeContainerItemDirective,
        BrNodeDirective,
        BrNodeTypePipe,
        BrPageComponent]; }, imports: function () { return [CommonModule, HttpClientModule]; }, exports: function () { return [BrComponentDirective,
        BrManageContentButtonDirective,
        BrManageMenuButtonDirective,
        BrPageComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrSdkModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    BrComponentDirective,
                    BrContainerBoxComponent,
                    BrContainerInlineComponent,
                    BrContainerOrderedListComponent,
                    BrContainerUnorderedListComponent,
                    BrContainerItemUndefinedComponent,
                    BrManageContentButtonDirective,
                    BrManageMenuButtonDirective,
                    BrNodeComponentDirective,
                    BrNodeContainerDirective,
                    BrNodeContainerItemDirective,
                    BrNodeDirective,
                    BrNodeTypePipe,
                    BrPageComponent,
                ],
                entryComponents: [
                    BrContainerBoxComponent,
                    BrContainerInlineComponent,
                    BrContainerOrderedListComponent,
                    BrContainerUnorderedListComponent,
                    BrContainerItemUndefinedComponent,
                ],
                exports: [
                    BrComponentDirective,
                    BrManageContentButtonDirective,
                    BrManageMenuButtonDirective,
                    BrPageComponent,
                ],
                imports: [CommonModule, HttpClientModule]
            }]
    }], null, null); })();

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Copyright 2020 Hippo B.V. (http://www.onehippo.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { BrComponentDirective, BrManageContentButtonDirective, BrManageMenuButtonDirective, BrPageComponent, BrSdkModule, BrNodeDirective as ɵa, BrContainerBoxComponent as ɵb, BrContainerInlineComponent as ɵc, BrContainerOrderedListComponent as ɵd, BrContainerUnorderedListComponent as ɵe, BrContainerItemUndefinedComponent as ɵf, BrMetaDirective as ɵg, BrNodeComponentDirective as ɵh, BrNodeContainerDirective as ɵi, BrNodeContainerItemDirective as ɵj, BrNodeTypePipe as ɵk };

//# sourceMappingURL=bloomreach-ng-sdk.js.map